name: Wait for Dependencies
on:
  workflow_call:
    inputs:
      wait-timeout:
        description: 'Timeout in seconds for each workflow wait'
        default: '900'
        required: false
        type: string

jobs:
  wait-for-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Info Start
        run: |
          echo "Starting to wait for dependent workflows..."
          echo "Timeout setting: ${{ inputs.wait-timeout }} seconds"
          echo "Current ref: ${{ github.event.pull_request.head.sha || github.sha }}"
          echo "Repository: ${{ github.repository }}"

      - name: Wait for workflows
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TIMEOUT: ${{ inputs.wait-timeout }}
          REF: ${{ github.event.pull_request.head.sha || github.sha }}
          REPO: ${{ github.repository }}
        run: |
          wait_for_check() {
            local check_name=$1
            local start_time=$(date +%s)
            local timeout=$TIMEOUT
            local status="pending"
            
            echo "Waiting for check: $check_name"
            
            while [ "$status" = "pending" ] || [ "$status" = "queued" ] || [ -z "$status" ]; do
              current_time=$(date +%s)
              elapsed=$((current_time - start_time))
              
              if [ $elapsed -gt $timeout ]; then
                echo "Timeout waiting for $check_name"
                exit 1
              fi
              
              # Get check status using GitHub CLI
              status=$(gh api \
                repos/$REPO/commits/$REF/check-runs \
                --jq ".check_runs[] | select(.name == \"$check_name\") | .conclusion" \
                || echo "pending")
              
              if [ "$status" = "null" ]; then
                status="pending"
              fi
              
              if [ "$status" = "pending" ] || [ "$status" = "queued" ] || [ -z "$status" ]; then
                echo "Status for $check_name: $status. Waiting 10 seconds..."
                sleep 10
              elif [ "$status" != "success" ]; then
                echo "Check $check_name failed with status: $status"
                exit 1
              fi
            done
            
            echo "Check $check_name completed successfully!"
          }
          
          # Wait for Update Changelog
          wait_for_check "Update Changelog"
          
          # Wait for Add Contributors
          wait_for_check "Add Contributors"

      - name: Debug Info End
        if: success()
        run: |
          echo "All dependent workflows completed successfully!"
          echo "Total wait time completed at: $(date)"